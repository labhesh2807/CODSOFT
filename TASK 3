#include <iostream>
using namespace std;

char board[3][3] = {{'1', '2', '3'}, {'4', '5', '6'}, {'7', '8', '9'}};
char current_player = 'X';

void display_board() {
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            cout << board[i][j] << " ";
        }
        cout << endl;
    }
}

bool check_win() {
    for (int i = 0; i < 3; i++) {
        if (board[i][0] == current_player && board[i][1] == current_player && board[i][2] == current_player)
            return true;
        if (board[0][i] == current_player && board[1][i] == current_player && board[2][i] == current_player)
            return true;
    }
    if (board[0][0] == current_player && board[1][1] == current_player && board[2][2] == current_player)
        return true;
    if (board[0][2] == current_player && board[1][1] == current_player && board[2][0] == current_player)
        return true;
    return false;
}

bool check_draw() {
    for (int i = 0; i < 3; i++) {
        for (int j = 0; j < 3; j++) {
            if (board[i][j] != 'X' && board[i][j] != 'O')
                return false;
        }
    }
    return true;
}

void switch_player() {
    current_player = (current_player == 'X') ? 'O' : 'X';
}

void play_game() {
    int choice;
    while (true) {
        display_board();
        cout << "player " << current_player << ", enter your move (1-9): ";
        cin >> choice;
        int row = (choice - 1) / 3;
        int col = (choice - 1) % 3;

        if (board[row][col] != 'X' && board[row][col] != 'O') {
            board[row][col] = current_player;
            if (check_win()) {
                display_board();
                cout << "player " << current_player << " wins!\n";
                break;
            }
            if (check_draw()) {
                display_board();
                cout << "it's a draw!\n";
                break;
            }
            switch_player();
        } else {
            cout << "invalid move. try again.\n";
        }
    }
}

int main() {
    play_game();
    return 0;
}
